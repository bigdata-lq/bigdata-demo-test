input {

	kafka{
		         bootstrap_servers => ["10.81.2.22:9092,10.81.2.23:9092,10.81.2.24:9092"]
		        client_id => "app-url-consumer"
		        group_id => "app-url-group"
		        auto_offset_reset => "latest"
		        consumer_threads => 10
		        decorate_events => true
		        topics => ["app-url"]
		        type=>"url"
			max_partition_fetch_bytes => "524288"
#			session_timeout_ms => "50000"
			max_poll_records => "1147483647"
	     }
    kafka{
		        bootstrap_servers => ["10.81.2.22:9092,10.81.2.23:9092,10.81.2.24:9092"]
		        client_id => "app-button-consumer"
		        group_id => "app-button-group"
		        auto_offset_reset => "latest"
		        consumer_threads => 10
		        decorate_events => true
		        topics => ["app-button"]
		        type=>"button"
			    max_partition_fetch_bytes => "524288"
#			    session_timeout_ms => "50000"
			    max_poll_records => "1147483647"
	    }
	kafka{
			bootstrap_servers => ["10.81.2.22:9092,10.81.2.23:9092,10.81.2.24:9092"]
			client_id => "app-todaynews-consumer"
			group_id => "app-todaynews-group"
			auto_offset_reset => "latest"
			consumer_threads => 10
			decorate_events => true
			topics => ["app-todaynews"]
			type=>"todaynews"
			max_partition_fetch_bytes => "524288"
#			    session_timeout_ms => "50000"
			max_poll_records => "1147483647"
	}

}

filter {
if [type]=="todaynews" {
	mutate {
		split => ["message" ,"	"]
		add_field => ["sessionId", "%{message[1]}"]
		add_field => ["time", "%{message[2]}"]
		add_field=>  ["duration","%{message[3]}"]
		add_field => ["userId", "%{message[4]}"]
		add_field => ["url", "%{message[5]}"]
		add_field => ["actionFlag", "%{message[6]}"]
		add_field => ["categoryId", "%{message[7]}"]
		add_field => ["dataId", "%{message[8]}"]
		add_field => ["netType", "%{message[9]}"]
		add_field => ["ip", "%{message[10]}"]
		add_field => ["phoneType", "%{message[11]}"]
		add_field => ["osType", "%{message[12]}"]
		add_field => ["osVersion", "%{message[13]}"]
		add_field => ["deviceId", "%{message[14]}"]
		add_field => ["systemId", "%{message[15]}"]
		add_field => ["ext1", "%{message[16]}"]
		add_field => ["ext2", "%{message[17]}"]
		add_field => ["ext3", "%{message[18]}"]
        add_field => ["ext4", "%{message[19]}"]
		add_field => ["ext5", "%{message[20]}"]
		add_field => ["channel", "%{message[21]}"]
		add_field => ["reqParam", "%{message[22]}"]
		add_field => ["reqResult", "%{message[23]}"]
		add_field => ["indextime", "%{message[2]}"]
		remove_field => [ "path" ]
    }


	if [ip] != "" {
	}else{
		drop{}
	}
	if [indextime] != "" {
		mutate {
		      split => ["indextime" ," "]
		      add_field => ["mydate", "%{indextime[0]}"]
		      add_field => ["otherdate", "%{indextime[1]}"]
	  	       }
	        mutate {
		      split => ["otherdate" ,":"]
		      add_field => ["hdate", "%{otherdate[0]}"]
		      remove_field => [ "otherdate" ]
		      remove_field => [ "indextime" ]
		       }
	  }else{
		drop {}
	}
     geoip {
                        source => "ip"
                        target => "geoip"
                        database => "/software/database/GeoLite2-City_20190423/GeoLite2-City.mmdb"
                        #fields => ["city_name", "country_code2", "country_name", "latitude", "longitude", "region_name","country_name","continent_code","ip","country_code3"]
                                        }

		mutate {
				update => { "message" => "	%{sessionId}	%{time}	%{duration}	%{userId}	%{url}	%{actionFlag}	%{categoryId}	%{dataId}	%{netType}	%{ip}	%{phoneType}	%{osType}	%{osVersion}	%{deviceId}	%{systemId}	%{ext1}	%{ext2}	%{geoip}	%{ext4}	%{ext5}	%{channel}	%{reqParam}	%{reqResult}" }
			}

	if [reqResult] == "%{message[21]}" {
		   drop{}
	}
}

if [type]=="url"{
	json{
source=>"message"
}
mutate{
add_field=>["indextimes","%{time}"]
}
if [time]!=''{
mutate{
split => ["time"," "]
add_field => ["myurl","%{time[0]}"]
add_field => ["otherdate","%{time[1]}"]
}
}
 geoip {
                        source => "ip"
                        target => "geoip"
                        database => "/software/database/GeoLite2-City_20190423/GeoLite2-City.mmdb"
                        #fields => ["city_name", "country_code2", "country_name", "latitude", "longitude", "region_name","country_name","continent_code","ip","country_code3"]
                                        }

mutate{
update=>{"message"=> "	%{sessionId}	%{indextimes}	%{duration}	%{userid}		%{actionflag}			%{nettype}	%{ip}	%{phonetype}	%{ostype}	%{osversion}	%{deviceid}	%{systemid}	%{ext1}	%{appversion}	%{geoip}	%{objectinfo}		%{channel}		%{reqresult}"}
}
}

if [type]=='button'{
json{
source=>"message"
}
mutate{
add_field=>["indextime","%{time}"]
}
if [time]!=''{
mutate{
split => ["time"," "]
add_field => ["mybutton","%{time[0]}"]
add_field => ["otherdate","%{time[1]}"]
}
}
 geoip {
                        source => "ip"
                        target => "geoip"
                        database => "/software/database/GeoLite2-City_20190423/GeoLite2-City.mmdb"
                        #fields => ["city_name", "country_code2", "country_name", "latitude", "longitude", "region_name","country_name","continent_code","ip","country_code3"]
                                        }

mutate{
update=>{"message"=> "	%{sessionId}	%{indextime}		%{userid}		%{actionflag}		%{objectid}	%{nettype}	%{ip}	%{phonetype}	%{ostype}	%{osversion}	%{deviceid}	%{systemid}			%{geoip}			%{objectinfo}		%{channel}		%{reqresult}"}
}
}
	}
output {
#	stdout{codec=>rubydebug}
   if [type]=="todaynews" {
		webhdfs {
			 host => "10.81.1.213"
			 standby_host=>"10.81.1.211"
			 port => 50070
			 path => "/user/news/logs/app/%{mydate}/%{mydate}.log"
			 flush_size => 500
			 idle_flush_time => 10
			 retry_interval => 0.5
			 retry_times=>100
			 user => "hdfs"
             codec => line {format => "%{message}"}
			}
                     }

  if [type]=="url"{
		webhdfs {
			 host => "10.81.1.213"
			 standby_host=>"10.81.1.211"
			 port => 50070
			 path => "/user/news/logs/app1/%{myurl}/%{myurl}.log"
			 flush_size => 500
			 idle_flush_time => 10
			 retry_interval => 0.5
			 retry_times=>100
			 user => "hdfs"
             codec => line {format => "%{message}"}
			}
			}
   if[type]=="button"{
		webhdfs {
			 host => "10.81.1.213"
			 standby_host=>"10.81.1.211"
			 port => 50070
			 path => "/user/news/logs/button/%{mybutton}/%{mybutton}.log"
			 flush_size => 500
			 idle_flush_time => 10
			 retry_interval => 0.5
			 retry_times=>100
			 user => "hdfs"
             codec => line {format => "%{message}"}
			}
                     }
}




